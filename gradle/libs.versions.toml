[versions]
# Kotlin
kotlin = "1.9.24"
kotlin_coroutines = "1.8.1"
kotlinx-io = "0.3.3"
kotlin-datetime = "0.6.0"

# Android
android-gradle-plugin = "8.3.2"
androidx_core_ktx = "1.13.1"
androidx_camera = "1.3.4"

# Compose
compose = "1.6.8"
compose_plugin = "1.6.11"
composeCompilerExtensionVersion = "1.5.14"

# Coil
coil = "3.0.0-alpha09"

# VM
orbit = "4.4.0"
androidx_lifecycle = "2.8.3"

# Publishing
maven-publish = "0.28.0"
core = "1.13.1"

[libraries]
# Plugins
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# Kotlin
kotlin_coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin_coroutines" }
kotlinx-io = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime" }

# Android
android-build-tools = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin"}
androidx_core_ktx = { module = "androidx.core:core-ktx", version.ref = "androidx_core_ktx" }
androidx_camera_core = { module = "androidx.camera:camera-core", version.ref = "androidx_camera" }
androidx_camera_lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "androidx_camera" }
androidx_camera_view = { module = "androidx.camera:camera-view", version.ref = "androidx_camera" }
androidx_camera_video = { module = "androidx.camera:camera-video", version.ref = "androidx_camera" }
androidx_camera_extensions = { module = "androidx.camera:camera-extensions", version.ref = "androidx_camera" }

# VM
androidx_lifecycle_view_model = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx_lifecycle" }
orbit_core = { module = "org.orbit-mvi:orbit-core", version.ref = "orbit" }
orbit_view_model = { module = "org.orbit-mvi:orbit-viewmodel", version.ref = "orbit" }

# Coil
coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil_video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil" }

# Publish
maven-publish-plugin = { module = "com.vanniktech.maven.publish.base:com.vanniktech.maven.publish.base.gradle.plugin", version.ref = "maven-publish" }
core = { group = "androidx.core", name = "core", version.ref = "core" }

[plugins]
# Android
android-application = { id = "com.android.application", version.ref = "android_gradle_plugin" }
android-library = { id = "com.android.library", version.ref = "android_gradle_plugin" }

# Kotlin Multiplatform
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-native-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }

# Java
java-gradle-plugin = { id = "java-gradle-plugin" }

# Compose
compose = { id = "org.jetbrains.compose", version.ref = "compose_plugin" }

# Publishing
convention-multiplatform = { id = "com.attafitamim.file.picker.multiplatform" }
convention-publish = { id = "com.attafitamim.file.picker.publish" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "maven-publish"}